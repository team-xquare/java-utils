buildscript {
    ext {
        spockVersion = '1.3-groovy-2.5'
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.team-xquare'
version '0.0.17'

repositories {
    mavenCentral()
}

dependencies {
    testRuntimeOnly 'org.codehaus.groovy:groovy'
    testImplementation "org.spockframework:spock-core:$spockVersion"
    testImplementation "org.spockframework:spock-spring:$spockVersion"
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.5.0'
}

test {
    useJUnitPlatform()
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'utils'

            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'Xquare Utils'
                description = 'Supporting to develop xquare'
                url = 'https://github.com/team-xquare/java-utils'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'smoothbear'
                        name = 'Jungbin Kim'
                        email = 'smoothbear04@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:svn:http://foo.googlecode.com/svn/trunk/'
                    developerConnection = 'scm:svn:https://foo.googlecode.com/svn/trunk/'
                    url = 'http://foo.googlecode.com/svn/trunk/'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/team-xquare/java-utils"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useGpgCmd()
    sign(publishing.publications)
}